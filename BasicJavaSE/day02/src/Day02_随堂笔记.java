1. 数组,  可以理解为Python中的 列表(list)
	概述:
	
	定义格式:
		int[] arr = new int[3];
		int[] arr = new int[]{11, 22, 33, 44, 55};
		int[] arr = {11, 22, 33, 44, 55};
		
	格式解释:
	
	内存图:
		栈, 堆.
	
	两个小问题:		//掌握
		空指针异常, 索引越界异常.
	
	案例: 遍历数组, 获取数组元素的最大值, 模拟计算器.	//掌握
	
2. 方法, 可以理解为Python中的方法
	格式:
		public static int getSum(int a, int b) {  //形参
			return a + b;
		}
	格式解释:
	
	注意事项:
	
	案例:		//掌握
		1. 遍历数组.
		2. 获取数组元素的最大值.
		3. 模拟计算器.
		
	方法重载:
		概述:
		
		案例: 判断两个整数是否相等.
		
	参数传递问题:
		

3. 面向对象
	概述:
	
	格式:
		如何定义类:
		
		如何使用类中的成员:
		
	三大特征:
		1. 封装.
			private, this, 构造方法
		2. 继承.
			概述, 格式, 叫法, 好处, 弊端, 继承中的成员特点(重点,难点), 方法重写(重点)
		3. 多态.
			概述, 前提, 成员访问特点(重点), 好处, 弊端
	两个关键字:
		final, static
	抽象类:
		概述, 特点, 成员特点, 案例: 动物类
	接口:
		概述, 特点, 成员特点, 接口和类的区别(面试问)
	综合案例: 	//8个类, 1个接口
		运动员和教练类案例.
		
	
	
//1. 创建对象.
//2. 给属性赋值, 并重新打印.
//3. 调用类中的成员方法.	
	
	
	
	
	
	
	
	
	
	
	